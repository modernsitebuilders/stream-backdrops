import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import Link from 'next/link';
import Image from 'next/image';
import Footer from '../../components/Footer';

const categoryInfo = {
  'professional-shelves': {
    name: 'Professional Shelves',
    description: 'Professional office shelves with books and plants - perfect for business video calls'
  },
  'home-lifestyle': {
    name: 'Home & Lifestyle', 
    description: 'Stylish home offices and lifestyle spaces - ideal for creative professionals'
  }
};

export default function CategoryPage() {
  const router = useRouter();
  const { slug } = router.query;
  const [images, setImages] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    async function loadImages() {
      if (!slug) return;
      
      try {
        const response = await fetch('/api/metadata');
        const metadata = await response.json();
        
        const categoryImages = Object.entries(metadata)
          .filter(([_, data]) => data.category === slug)
          .map(([key, data]) => ({
            id: key,
            ...data
          }));

        setImages(categoryImages);
      } catch (error) {
        console.error('Error loading images:', error);
        setImages([]);
      } finally {
        setLoading(false);
      }
    }

    loadImages();
  }, [slug]);

  const category = categoryInfo[slug];

  if (!category) {
    return (
      <>
        <Head>
          <title>Category Not Found - StreamBackdrops</title>
        </Head>
        <div style={{ padding: '2rem', textAlign: 'center' }}>
          <h1>Category Not Found</h1>
          <Link href="/">‚Üê Back to Home</Link>
        </div>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>{`${category.name} Virtual Backgrounds - StreamBackdrops`}</title>
        <meta name="description" content={category.description} />
      </Head>

      <div style={{ minHeight: '100vh', background: '#f9fafb' }}>
        {/* Navigation */}
        <header style={{
          background: 'white',
          borderBottom: '1px solid #e5e7eb',
          padding: '1rem 0'
        }}>
          <div style={{ maxWidth: '1200px', margin: '0 auto', padding: '0 2rem' }}>
            <nav style={{
              display: 'flex',
              gap: '1rem',
              justifyContent: 'center',
              flexWrap: 'wrap'
            }}>
              <Link href="/" style={{
                padding: '0.5rem 1rem',
                background: '#f3f4f6',
                borderRadius: '0.5rem',
                textDecoration: 'none',
                color: '#6b7280'
              }}>
                üè† Home
              </Link>
              
              {Object.entries(categoryInfo).map(([categorySlug, info]) => (
                <Link 
                  key={categorySlug}
                  href={`/category/${categorySlug}`}
                  style={{
                    padding: '0.5rem 1rem',
                    borderRadius: '0.5rem',
                    textDecoration: 'none',
                    color: categorySlug === slug ? 'white' : '#6b7280',
                    background: categorySlug === slug ? '#2563eb' : '#f3f4f6'
                  }}
                >
                  {info.name}
                </Link>
              ))}
            </nav>
          </div>
        </header>

        {/* Category Content */}
        <main style={{ maxWidth: '1400px', margin: '0 auto', padding: '2rem' }}>
          <div style={{ textAlign: 'center', marginBottom: '3rem' }}>
            <h1 style={{ fontSize: '2.5rem', marginBottom: '1rem' }}>{category.name}</h1>
            <p style={{ color: '#6b7280', fontSize: '1.1rem' }}>{category.description}</p>
            <p style={{ marginTop: '1rem', fontWeight: 'bold' }}>
              {loading ? 'Loading...' : `${images.length} images available`}
            </p>
          </div>

          {/* Images Grid */}
          {loading ? (
            <div style={{ textAlign: 'center', padding: '4rem' }}>
              <div>Loading images...</div>
            </div>
          ) : images.length === 0 ? (
            <div style={{ textAlign: 'center', padding: '4rem' }}>
              <p>No images found in this category.</p>
            </div>
          ) : (
            <div style={{
              display: 'grid',
              gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',
              gap: '2rem'
            }}>
              {images.map((image) => (
                <div key={image.id} style={{
                  background: 'white',
                  borderRadius: '1rem',
                  overflow: 'hidden',
                  boxShadow: '0 4px 6px rgba(0,0,0,0.1)'
                }}>
                  <div style={{
                    position: 'relative',
                    width: '100%',
                    aspectRatio: '16/9'
                  }}>
                    <Image
                      src={`/images/${image.filename}`}
                      alt={image.title}
                      fill
                      style={{ objectFit: 'cover' }}
                    />
                  </div>
                  <div style={{ padding: '1rem' }}>
                    <h3 style={{ marginBottom: '0.5rem' }}>{image.title}</h3>
                    <a 
                      href={`/images/${image.filename}`}
                      download={image.filename}
                      style={{
                        background: '#2563eb',
                        color: 'white',
                        padding: '0.5rem 1rem',
                        borderRadius: '0.5rem',
                        textDecoration: 'none',
                        display: 'inline-block'
                      }}
                    >
                      Download
                    </a>
                  </div>
                </div>
              ))}
            </div>
          )}
        </main>

        <Footer />
      </div>
    </>
  );
}